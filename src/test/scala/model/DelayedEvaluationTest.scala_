

// Copyright Shunsuke Sogame 2008-2010.
// Distributed under the terms of an MIT-style license.


package com.github.okomok.madatest; package dualtest; package modeltest


import com.github.okomok.mada
import mada.dual._
import mada.dual.nat.dense.Literal._
import mada.dual.nat.dense.{Nil, ::, _1B, _0B}


// Result:
//     _NOT_ delayed.


/*
class DelayedEvaluationTezt {

    import SlowFibonacci._

    class Boo[n <: Nat, m <: Nat] {
        // doesn't use `n`.
        type i = m# -[_3]
    }

    class Foo[n <: Nat] {
        type k = Boo[fibonacci[n], n]
    }

    type t1 = Foo[_15]#k#i
    meta.assertSame[_12, t1]
}
*/





// The same as above.
class DelayedEvaluation2Tezt {

    import SlowFibonacci._

    type Boo[n <: Nat, m <: Nat] = m# -[_3]

    type Foo[n <: Nat] = Boo[fibonacci[n], n]

    type t1 = Foo[_15]
    meta.assertSame[_12, t1]
}
